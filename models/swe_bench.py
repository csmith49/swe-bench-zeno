"""
Models for processing the SWE-bench results generated by OpenHands.
"""

from __future__ import annotations

from typing import Any
from pydantic import BaseModel


class SWEBenchInstance(BaseModel):
    """
    Test results for a single SWE-bench instance.
    """

    instance_id: str
    test_result: SWEBenchTestResult


class SWEBenchTestResult(BaseModel):
    """
    The result of executing an agent on an instance.
    """

    git_patch: str
    report: SWEBenchTestReport
    apply_patch_output: str | None = None
    test_output: str | None = None

    def dump(self) -> dict[str, Any]:
        """
        Convert this object to a simple dictionary.

        Unlike the built-in `model_dump` method, this flattens all sub-structures.
        """
        return {"git_patch": self.git_patch, **self.report.model_dump()}


class SWEBenchTestReport(BaseModel):
    """
    Summary of the performance of the agent.
    """

    empty_generation: bool
    resolved: bool
    failed_apply_patch: bool
    error_eval: bool
    test_timeout: bool
